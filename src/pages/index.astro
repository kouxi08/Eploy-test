---
import BaseHead from '../components/BaseHead.astro';
import HeaderLink from '../components/HeaderLink.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import '@fontsource/freehand'
import '@fontsource/gfs-didot'




---

<!doctype html>
<html lang="ja">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<div class="openbtn"><span></span><span></span><span></span></div>
		<p class="icon">kouxi photo</p>
		<div class="width-border"/>
		<div class="height-border"/>
		<div class="black-overlay"></div>

		<nav>
			<ul class = "link">
				<li class = "page_link">
					<HeaderLink href="/blog">BLOG</HeaderLink>
				</li>
				<li class="page_link">
					<HeaderLink href="/gallery">GALLERY</HeaderLink>
				</li>
			</ul>
		</nav>
		<nav>
			<div class = "sns">
				<p>
					<HeaderLink href="https://twitter.com/KouXi_3840">
						<img src="sns_icon/x.png"width={20} height={20} alt="x" class="sns_img"/>
					</HeaderLink>
				</p>
				<p>
					<HeaderLink href="https://www.instagram.com/kou.0003">
						<img src="sns_icon/Instagram.png" width={25} height={25} alt="Instagram" class="sns_img"/>
					</HeaderLink>
				</p>
			</div>
		</nav>

		<script>
			document.addEventListener("DOMContentLoaded", function() {
				var openbtn = document.querySelector('.openbtn') as HTMLElement;
				var blackOverlay = document.querySelector('.black-overlay') as HTMLElement;
				var pagelink = document.querySelector('.link') as HTMLElement;

				openbtn.addEventListener('click', function() {
					openbtn.classList.toggle('active');
					// activeになったら黒い画面を表示
					if (openbtn.classList.contains('active')) {
						blackOverlay.style.display = 'block';
						pagelink.style.display = 'block';
					} else {
						blackOverlay.style.display = 'none';
						pagelink.style.display = 'none';
					}
				});
			});
		</script>

	</body>
</html>


<style>
	body {
		background-image: url('/public/bg_image/DSC02333-5.webp'); 
		background-size:cover; 
		background-position: center; 
		background-repeat: no-repeat; 
		width: 100vw; 
  		height: 100vh; 
		color: white;
		animation: fadeIn 2s ease 0s 1 normal;
    	-webkit-animation: fadeIn 2s ease 0s 1 normal;
	}
		@keyframes fadeIn { /*上のbody内で呼び出しているアニメーションと名前をそろえる*/
		0% {opacity: 0} /* 始め */
		100% {opacity: 1} /* 終わり */
	}
	header {
		flex-direction: column;
		align-items: center;
	}
	.link{
		font-family: "GFS Didot";
		display: flex;
		list-style: none;
		font-size: 1.2rem; /* text-2xl */
		position: absolute; /* absolute */
		top: 0; /* top-0 */
		right: 6rem; /* right-0 */
		padding: 2.5rem/* 32px */;
		z-index: 1000; 
		
	}
	.link li a {
		display: block;
		text-decoration: none;
	}
	.link li a {
		position: relative;
	}
	.link li a:hover {
		color:#c6c6c6;
	}
	.link li a::after {
		content: '';
		position: absolute;
		left: -5%;
		width: 105%;
		bottom: -40px;
		height: 4px; /* 線の太さ */
		background-color: #fffffff0; /* 線の色 */
		transition: all .3s;
		transform: scale(0, 1);/*X方向0、Y方向1*/
		transform-origin: center top;/*上部中央基点*/
	}
	.link li a:hover::after {
		transform: scale(1, 1);/*X方向にスケール拡大*/
	}

	.page_link {
		margin-left: 1.25rem/* 20px */;
    	margin-right: 1.25rem/* 20px */;
		letter-spacing: 5px
		
	}
	.sns {
		position: absolute; /* absolute */
		top: 45%; /* top-0 */
		right: 2%; /* right-0 */
		z-index: 1000; 
	}
	.sns_img {
		margin-bottom: 50px;
	}

	.width-border:before{
		border-top: 1px solid rgb(255, 255, 255); /* 1ピクセルの実線のボーダーを右に設定 */
		width: 100%;
		height: 0.4px;
		position: absolute;
		top: 7rem/* 96px */;
		content: '';
		animation: border_anim_width 2s linear forwards;
	}
	@keyframes border_anim_width {
		0%{
			width: 0%;
		}
		100%{
			width: 100%;
		}
	}
	.height-border:before {
		border-right: 1px solid rgb(255, 255, 255); /* 1ピクセルの実線のボーダーを右に設定 */
		height: 100%;
		top: 0;
		position: absolute;
		content: '';
		right: 6rem;
		animation: border_anim_height 2s linear forwards;
	}
	@keyframes border_anim_height {
		0%{
			height: 0%;
		}
		100%{
			height: 100%;
		}
	}

	.icon {
		font-family: 'Freehand';
		font-size: 125px;
		margin: 0;
		padding:  30% 0 0 8%;
	}

	.black-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(34, 34, 34, 0.9); /* 半透明の黒 */
            z-index: 999; /* 他の要素よりも前面に表示 */
            display: none; /* 初期状態では非表示 */
        }


	.openbtn{
		display: none;
		float: right;
		position: relative;
		cursor: pointer;
		top: 2%;
		right: 5%;
		width: 50px;
		height:50px;
		z-index: 1000; /* 黒い画面よりも前面に表示 */
	}

	/*ボタン内側*/
	.openbtn span{
		text-align: center;
		display: inline-block;
		transition: all .4s;/*アニメーションの設定*/
		position: absolute;
		left: 14px;
		height: 1.5px;
		border-radius: 2px;
		background: #fff;
		width: 60%;
	}

	.openbtn span:nth-of-type(1) {
		top:15px;	
	}

	.openbtn span:nth-of-type(2) {
		top:25px;
	}

	.openbtn span:nth-of-type(3) {
		top:35px;
	}

	/*activeクラスが付与されると線が回転して×に*/

	.openbtn.active span:nth-of-type(1) {
		top: 18px;
		left: 18px;
		transform: translateY(6px) rotate(-45deg);
		width: 60%;
	}

	.openbtn.active span:nth-of-type(2) {
		opacity: 0;/*真ん中の線は透過*/
	}

	.openbtn.active span:nth-of-type(3){
		top: 30px;
		left: 18px;
		transform: translateY(-6px) rotate(45deg);
		width: 60%;
	}


	@media (max-width: 768px) {
		header {
			flex-direction: row;
		}
		header{
			justify-content: space-between;
		}
	}
	@media (max-width: 680px) {
		.height-border:before{
			display: none; 
		}
		.width-border:before{
			display: none; 
		}
		.sns{
			display: none;
		}
		.icon {
			padding: 75% 0 0 0;
			text-align: center;
			font-size: 70px;
		}
		.link {
			display: none;
			padding: 0;
			margin: 0;
			top:15%;
			left: 0;
			font-size: 20px;
		}
		.link li a::after {
			display: none;
		}
		.page_link {
			margin: 30px 30px;
		}
		.openbtn{
			display: block;
		}
	}
</style>